Άσκηση 3
Παναγιώτα Γύφτου , Α.Μ. 1115201900318

1.Οι εντολές μεταγλώττισης του προγράμματος βρίσκονται στο αρχείο Makefile, δηλαδή η μεταγλώττιση γίνεται με το make.
2. Και τρέχω το πρόγραμμα: ./main 5 40 5 10 8
   (δηλ. N=5 M=40 L=5 good_thrsh=10 bad_thrsh=8)

3.
-Επιλογές κλάσεων:
Έχω 4 κλάσεις.Την creature_society, την creature, την good_creature και την bad_creature.Το πρόβλημα κινείται γύρω από αυτές τις κλάσεις.Η κλάση creature_society περιέχει μια κοινότητα καλών και κακών πλασμάτων.Η κλάση creature είναι μια γενικότερη κλάση "υπερκλάση" και οι εξειδικεύσεις της είναι οι κλάσεις good_creature και bad_creature, οι οποίες είναι "υποκλάσεις" της creature.Τα αντικείμενα των κλάσεων good_creature και bad_creature είναι και αντικείμενα της υπερκλάσης creature, το αντίθετο δεν ισχύει.  

-Επιλογές ορατότητας μελών κλάσεων:
Στον private χώρο των κλάσεων creature_society, creature, good_creature και bad_creature έχω βάλει δεδομένα που χαρακτηρίζουν το/τα αντικείμενο/α.Για παράδειγμα:
      
      > Η κλάση creature_society περιέχει μια ακέραια μεταβλητή, η οποία είναι το πλήθος των πλασμάτων της κοινότητας (N), μια άλλη μεταβλητή ακέραια, η             οποία παριστάνει το πλήθος των καλών πλασμάτων (no_Good) που βρίσκονται μέσα στην κοινότητα και μια τελευταία ακέραια μεταβλητή η οποία είναι το             πλήθος των ζόμπι (no_Zobies) που βρίσκονται μέσα στην κοινότητα.Τέλος το πιο σημαντικό της δεδομένο στον private χώρο που συμβάλλει στην επικοινωνία         με τα υπόλοιπα αντικείμενα που περιλαμβάνονται στην δόμηση της κοινότητας είναι ο δείκτης σε άλλη κλάση.Πιο συγκεκριμένα η κλάση creature_society            έχει ένα δείκτη σε πίνακα τύπου κλάσης creature (creature **creatures_array).
      
      > Η κλάση creature περιέχει μια συμβολοσειρά η οποία είναι το όνομα του πλάσματος (Creature_Name) και 3 ακέραιες μεταβλητές, οι οποίες έχουν         	αποθηκευμένες σημαντικές πληροφορίες για το πλάσμα.Η 1η ακέραια αναπαριστά την ζωή του πλάσματος (Life), η 2η δείχνει αν είναι καλό ή κακό 	             πλάσμα (Good_Bad) και τέλος η 3η έχει αποθηκευμένη την θέση του πλάσματος στην κοινότητα (position).

      > Η κλάση good_creature έχει ένα private μέλος, το οποίο είναι μια ακέραια μεταβλητή που έχει αποθηκευμένο το κατώφλι ευρωστίας του καλού πλάσματος 	       (good_thrsh).

      > Η κλάση bad_creature έχει ένα private μέλος, το οποίο είναι μια ακέραια μεταβλητή που έχει αποθηκευμένο το κατώφλι ευρωστίας του κακού πλάσματος.
	(bad_thrsh).

    Στο δημόσιο κομμάτι των κλάσεων εκτός από της συναρτήσεις κατασκευής καταστροφής - και σε ορισμένες copy constructor- έχουμε συναρτήσεις οι οποίες χρησιμοποιούνται για την εκπλήρωση αιτημάτων που δέχονται είτε από κάποιο αντικείμενο άλλης κλάσης είτε από τον χρήστη, αλλά και την επιτευξη διεργασιών της ίδιας της κλάσης, δηλαδή συναρτήσεις της ίδιας κλάσης συνεργάζονται.Τέλος έχουμε και τις συναρτήσεις, οι οποίες αποτελούν τα protected μέλη μιας βασικής κλάσης, συγκεκριμένα στην εργασία αυτή η βασική κλάση που έχει protected μέλη και είναι ορατά από τις συναρτήσεις των υποκλάσεων της είναι η creature.Στο πρόβλημα μας κυρίως οι συναρτήσεις της κλάσεις creature_society καλούνται από τον χρήστη για την εκπλήρωση αιτημάτων του.Ο χρήστης έρχεται σε επαφή με την creature_society για την δημιουργία της κοινότητας, για να ευλογήσει ή να χτυπήσει ένα μέλος της κοινότητας,να ζητήσει πληροφορίες για το πλήθος των καλών πλασμάτων αλλά και για το πλήθος των ζόμπι.Τέλος ζητά την εκτύπωση των μελών της κοινότητας.


-Περιγραφή Προγράμματος:

**Δημιουργία Κοινότητας**
    Αρχικά καλώ την συνάρτηση κατασκευής της κλάσης creature_society, δημιουργώ έναν πίνακα Ν θέσεων τύπου creature (creatures_array).Επιλέγω τυχαία σε κάθε θέση το είδος πλάσματος (καλό ή κακό) που θα καταλάβει την τρέχουσα θέση στον πίνακα (creatures_array), και ανάλογα καλώ είτε τον κατασκευαστή του καλού πλάσματος είτε του κακού.Οι constructors που κλήθηκαν (good_creature ή bad_creature) καλούν αρχικά κατα την κατασκευή του αντικειμένου τον constructor της κλάσης creature , η οποία είναι και η υπερκλάση της κλάσης που την κάλεσε μέσω του κατασκευαστή της.

**Ευλογία πλάσματος**
    Σε πρώτη φάση καλείται η συνάρτηση bless της κλάσης creature_society, η οποία καλεί την bless της κλάσης good_creature ή της bad_creature και όχι της κλάσης creature.Για τον λόγο ότι η bless ανάλογα με το είδος του πλάσματος έχει διαφορετικά δεδομένα.Η bless συνάρτηση επαναορίζεται στις παραγόμενες κλάσεις της κλάσης creature,έτσι δηλώνουμε την συνάρτηση bless στην creature ως virtual override συνάρτηση.Η διαδικασία που ακολουθούν οι συναρτήσεις bless των good_creature και bad_creature είναι ίδια, απλώς αλλάζει η συγκριση του κατωφλιού, γιατί το καλό με το κακό κατώφλι είναι διαφορετικό.Συγκεκριμένα οι bless αρχικά ελέγχουν μέσω της get_creature_life() την ζωή του πλάσματος, η οποία είναι inline συνάρτηση της creature και είναι μέλος protected, έτσι μονο οι δύο υποκλάσεις έχουν πρόσβαση σε αυτή.Αν η ζωή είναι μεγαλύτερη του μηδενός το πλάσμα είναι ζωντανό και μπορεί να του επιδράσει πάνω του η ενέργεια bless.Σε αυτή την περίπτωση αυξάνεται μέσω της increased_the_life(), η ζωή του πλάσματος (η οποία είναι και αυτή inline συνάρτηση της creature και είναι μέλος protected).Έπειτα ελέγχεται αν η αυξημένη ζωή είναι μεγαλύτερη του κατωφλιού.Αν ισχύει αυτό, ενημερώνεται η creature_society με ένα flag, ώστε το τρέχον πλάσμα (καλό ή κακό) να κλωνοποιηθεί.Αν οχι το πλάσμα δεν κλωνοποιείται.Αν είμαστε στην περίπτωση που η ζωή του πλάσματος είναι μηδέν τότε το πλάσμα είναι ζόμπι και δεν μπορεί να ευλογηθεί, παραμένει ως έχει.
    Επιστρέφουμε στην συνάρτηση bless της creature_society.Αν έχει επιστρέψει η bless της κλάσης good_creature ή bad_creature τιμή 1, σημαίνει ότι το πλάσμα είναι εύρωστο και μπορεί να κλωνοποιηθεί.Επειδή η κλωνοποίηση του καλού με του κακού έχουν διαφορές ελέγχεται πριν την κλωνοποίηση το είδος του πλάσματος, ώστε να κληθεί η κατάλληλη συνάρτηση.Αυτό επιτυγχάνεται μέσω της is_a_good(), πάλι όπως και στην bless καλείται της κλάσης good_creature ή της bad_creature και όχι της κλάσης creature.Για το ίδιο λόγο ότι η is_a_good() επαναορίζεται στις παραγόμενες κλάσεις της κλάσης creature, την δηλώνουμε ως virtual override.Η is_a_good() της κλάσης good_creature επιστρέφει την boolean τιμή true,δηλώνοντας ότι ναι είναι αλήθεια είναι το καλό πλάσμα, ενώ της κλάσης bad_creature false, δηλαδή όχι δεν είναι καλό πλάσμα.
	
	> Αν η τιμή επιστροφής της is_a_good() είναι true , τότε καλείται η συνάρτηση clone_next της κλάσης creature_society, ώστε να επιτευχθεί η       	  	  κλωνοποίηση του καλού πλάσματος στην επόμενη αμέσως θέση.Η clone_next αρχικά ελέγχει αν το τρέχον πλάσμα που επρόκειτο να κλωνοποιηθεί βρίσκεται 	  	  στην τελευταία θέση της κοινότητας,αν ναι τότε κλωνοποιείται στην πρώτη θέση της κοινότητας (με βάση τα δεδομένα της εργασίας), έτσι διαγράφουμε             το πρώτο στοιχείο της κοινότητας ( delete creatures_array[0]; ),καλώντας τον destructor της creature (και όχι τον αντίστοιχο destructor της 	               good_creature, ο destructor αυτός είναι δηλωμένος ως virtual).Μετά από την διαγραφή του πλάσματος καλείται η συνάρτηση της clone της                         good_creature (πάλι η συνάρτηση clone της creature δηλώνεται ως virtual override), αυτή με την σειρά της καλεί τον copy constructor της 	  	          good_creature και αυτός με την σειρά του, τον copy constructor της creature.Η clone της good_creature επιστρέφει αυτόν τον νέο κλώνο.Στην 	  	          περίπτωση που το καλό πλάσμα δεν βρίσκεται στην τελευταία θέση γίνεται η ίδια διαδικασία με πρίν απλώς η θέση που θα κλωνοποιηθεί βρίσκεται με την           προσαύξηση της τρέχουσας θέσης που βρίσκεται το εύρωστο πλάσμα.Στο τέλος ενημερώνονται μέσω της συνάρτησης check_no_good(), το πλήθος των καλών 	          πλασμάτων που βρίσκονται στην κοινότητα.

	> Αν η τιμή επιστροφής, της is_a_good() είναι false , τότε καλείται η συνάρτηση clone_zobies της κλάσης creature_society, ώστε να επιτευχθεί η 	  	          κλωνοποίηση του κακού πλάσματος στις επόμενες διαδοχικές θέσεις που τις έχουν καταλάβει ζόμπι.Η clone_zobies αρχικά ελέγχει αν το κακό πλάσμα 	          βρίσκεται στην τελευταία θέση, αν βρίσκεται στην τελευταία θέση δεν γίνεται η κλωνοποίηση (με βάση τα δεδομένα της εργασίας).Αν είναι σε 	  	          οποιαδήποτε θέση εκτός της τελευταίας, τότε ελέγχονται αν οι επόμενες θέσεις είναι κατειλημμένες από ζόμπι.Ο έλεγχος επιτυγχάνεται μέσω της 	  	          (creatures_array[i]->is_a_zobie()), αν η is_a_zobie() επιστρέφει τιμή true τότε το πλάσμα είναι ζόμπι το διαγράφουμε,καλώντας τον destructor της 	  	  creature (και όχι τον αντίστοιχο destructor της bad_creature, ο destructor αυτός είναι δηλωμένος ως virtual).Μετά από την διαγραφή του πλάσματος             καλείται η συνάρτηση της clone της bad_creature (πάλι η συνάρτηση clone της creature δηλώνεται ως virtual override), αυτή με την σειρά της καλεί             τον copy constructor της bad_creature και αυτός με την σειρά του, τον copy constructor της creature.Η clone της bad_creature επιστρέφει αυτόν τον            νέο κλώνο.Οι επαναλήψεις των παραπάνω διαδικασιών γίνονται μέχρι να φτάσει στο τελευταίο πλάσμα της κοινότητας αν είναι μέχρι τότε οι θέσεις από             ζόμπι αλλιώς αν δεν είναι ζόμπι το τρέχον πλάσμα που ελέγχεται σταματάει η κλωνοποίηση.Στο τέλος ενημερώνονται μέσω της συνάρτησης 	  	  check_no_zobies(), το πλήθος των ζόμπι που βρίσκονται στην κοινότητα. 



**Χτύπημα πλάσματος**
    Σε πρώτη φάση καλείται η συνάρτηση beat της κλάσης creature_society, η οποία καλεί την beat της κλάσης good_creature ή της bad_creature και όχι της κλάσης creature.Η beat συνάρτηση επαναορίζεται στις παραγόμενες κλάσεις της κλάσης creature,έτσι δηλώνουμε την συνάρτηση beat στην creature ως virtual override συνάρτηση.Η διαδικασία που ακολουθούν οι συναρτήσεις beat των good_creature και bad_creature είναι ίδια.Συγκεκριμένα οι beat αρχικά ελέγχουν μέσω της get_creature_life() την ζωή του πλάσματος.Αν η ζωή είναι μεγαλύτερη του μηδενός το πλάσμα είναι ζωντανό και μπορεί να του επιδράσει πάνω του η ενέργεια beat.Σε αυτή την περίπτωση μειώνεται μέσω της decreased_the_life(), η ζωή του πλάσματος (η οποία είναι και αυτή inline συνάρτηση της creature και είναι μέλος protected).Αν είμαστε στην περίπτωση που η ζωή του πλάσματος είναι μηδέν τότε το πλάσμα είναι ζόμπι και δεν μπορεί να χτυπηθεί, παραμένει ως έχει.
    Επιστρέφουμε πάλι στην συνάρτηση beat της κλάσης creature_society μετά την κλήση της beat (της κλάσης good_creature ή της bad_creature),ενημερώνονται μέσω των συναρτήσεων check_no_good() και check_no_zobies() το πλήθος των καλών πλασμάτων και αντίστοιχα το πλήθος των ζόμπι που βρίσκονται στην κοινότητα.


**Ενημέρωση χρήστη, τελικής κατάστασης της κοινότητας**
    Μέσω της συνάρτησης no_of_good() που είναι της κλάσης creature_society επιστρέφεται το πλήθος των καλών πλασμάτων.Αν το επιστρεφόμενο πλήθος είναι ίσο με το πλήθος των πλασμάτων που βρίσκονται στην κοινότητα, τότε εκτυπώνεται το μήνυμα ότι ο κόσμος των πλασμάτων αποτελείται από καλά πλάσματα.
    Αλλιώς μέσω της no_of_zobies() που είναι της κλάσης creature_society επιστρέφεται το πλήθος των ζόμπι.Αν το επιστρεφόμενο πλήθος είναι ίσο με το πλήθος των πλασμάτων που βρίσκονται στην κοινότητα, τότε εκτυπώνεται το μήνυμα ότι αυτή είναι μια νεκρή κοινότητα.
    Αν τίποτα από τα δύο δεν ισχύει, εκτυπώνεται στον χρήστη: Προσπάθησε ξανά να βελτιώσεις τον κόσμο.
    Τέλος εκτυπώνεται μέσω της print, που είναι συνάρτηση της κλάσης creature_society, η κοινότητα, δηλαδή οι θέσεις με τα ονόματα των πλασμάτων.


Στο τέλος καλούνται αυτόματα οι destructors για την καταστροφή των αντικειμένων.
